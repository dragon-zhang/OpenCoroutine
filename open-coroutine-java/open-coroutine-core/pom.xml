<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.open-coroutine.framework</groupId>
        <artifactId>open-coroutine-java</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>open-coroutine-core</artifactId>

    <profiles>
        <!-- https://github.com/openjdk/jdk/blob/jdk-16%2B36/src/java.base/windows/native/libjava/java_props_md.c#L568 -->
        <!-- macos -->
        <profile>
            <id>macos-amd64</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <os_name>macos</os_name>
                <os_arch_option>-arch x86_64 -arch arm64</os_arch_option>
                <lib_name>libJniLibrary.dylib</lib_name>
            </properties>
        </profile>

        <!-- linux -->
        <profile>
            <id>linux-amd64</id>
            <activation>
                <os>
                    <name>linux</name>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <os_name>linux</os_name>
                <os_arch_option>-m64</os_arch_option>
                <lib_name>libJniLibrary-x64.so</lib_name>
            </properties>
        </profile>

        <!-- windows -->
        <profile>
            <id>windows-amd64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <os_name>windows</os_name>
                <os_arch_option>-m64</os_arch_option>
                <lib_name>libJniLibrary-x64.dll</lib_name>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>1.0-alpha-11</version>
                        <extensions>true</extensions>
                        <configuration>
                            <javahIncludes>
                                <javahInclude>
                                    <className>org.opencoroutine.framework.NativeCheckerApi</className>
                                </javahInclude>
                                <javahInclude>
                                    <className>org.opencoroutine.framework.FiberApi</className>
                                </javahInclude>
                                <javahInclude>
                                    <className>org.opencoroutine.framework.SchedulerApi</className>
                                </javahInclude>
                                <javahInclude>
                                    <className>org.opencoroutine.framework.SystemCallHookApi</className>
                                </javahInclude>
                            </javahIncludes>
                            <jdkIncludePath>${project.basedir}/src/main/native/head</jdkIncludePath>
                            <javahOS>${os_name}</javahOS>
                            <sources>
                                <source>
                                    <directory>src/main/native/src</directory>
                                    <includes>
                                        <include>fiber/*.h</include>
                                        <include>*.c</include>
                                    </includes>
                                </source>
                            </sources>

                            <compilerProvider>generic-classic</compilerProvider>
                            <compilerExecutable>g++</compilerExecutable>
                            <compilerStartOptions>
                                <compilerStartOption>${os_arch_option}</compilerStartOption>
                                <compilerStartOption>-fpic</compilerStartOption>
                                <compilerStartOption>-shared</compilerStartOption>
                                <compilerStartOption>-o</compilerStartOption>
                            </compilerStartOptions>

                            <linkerOutputDirectory>target</linkerOutputDirectory>
                            <linkerExecutable>g++</linkerExecutable>
                            <linkerStartOptions>
                                <linkerStartOption>${os_arch_option}</linkerStartOption>
                                <linkerStartOption>-fpic</linkerStartOption>
                                <linkerStartOption>-shared</linkerStartOption>
                                <linkerStartOption>-o</linkerStartOption>
                                <linkerStartOption>-static-libstdc++</linkerStartOption>
                                <linkerStartOption>-static</linkerStartOption>
                            </linkerStartOptions>
                            <linkerEndOptions>
                                <!-- lib_fiber -->
                                <linkerEndOption>-L ${project.basedir}/../../lib_fiber/lib/</linkerEndOption>
                                <linkerEndOption>-o ${project.build.directory}/classes/${lib_name}</linkerEndOption>
                            </linkerEndOptions>
                        </configuration>
                        <executions>
                            <execution>
                                <id>javah</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>javah</goal>
                                    <goal>initialize</goal>
                                    <goal>compile</goal>
                                    <goal>link</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>8</source>
                    <target>8</target>
                    <encoding>UTF-8</encoding>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <!-- 请不要删除这里的maven-jar-plugin，也不要升级它的版本，否则很可能无法正常打包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-11</version>
                <extensions>true</extensions>
                <configuration>
                    <javahIncludes>
                        <javahInclude>
                            <className>org.opencoroutine.framework.NativeCheckerApi</className>
                        </javahInclude>
                        <javahInclude>
                            <className>org.opencoroutine.framework.FiberApi</className>
                        </javahInclude>
                        <javahInclude>
                            <className>org.opencoroutine.framework.SchedulerApi</className>
                        </javahInclude>
                        <javahInclude>
                            <className>org.opencoroutine.framework.SystemCallHookApi</className>
                        </javahInclude>
                    </javahIncludes>
                    <jdkIncludePath>${project.basedir}/src/main/native/head</jdkIncludePath>
                    <javahOS>${os_name}</javahOS>
                    <sources>
                        <!-- jni主体 -->
                        <source>
                            <directory>${project.basedir}/src/main/native/src</directory>
                            <includes>
                                <include>fiber/*.h</include>
                                <include>*.c</include>
                            </includes>
                        </source>
                    </sources>

                    <compilerProvider>generic-classic</compilerProvider>
                    <compilerExecutable>g++</compilerExecutable>
                    <compilerStartOptions>
                        <compilerStartOption>${os_arch_option}</compilerStartOption>
                        <compilerStartOption>-fpic</compilerStartOption>
                        <compilerStartOption>-shared</compilerStartOption>
                        <compilerStartOption>-o</compilerStartOption>
                    </compilerStartOptions>

                    <linkerOutputDirectory>target</linkerOutputDirectory>
                    <linkerExecutable>g++</linkerExecutable>
                    <linkerStartOptions>
                        <linkerStartOption>${os_arch_option}</linkerStartOption>
                        <linkerStartOption>-fpic</linkerStartOption>
                        <linkerStartOption>-shared</linkerStartOption>
                    </linkerStartOptions>
                    <linkerEndOptions>
                        <!-- lib_fiber -->
                        <linkerEndOption>-L ${project.basedir}/../../lib_fiber/lib/</linkerEndOption>
                        <linkerEndOption>-o ${project.build.directory}/classes/${lib_name}</linkerEndOption>
                    </linkerEndOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>javah</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>javah</goal>
                            <goal>initialize</goal>
                            <goal>compile</goal>
                            <goal>link</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>